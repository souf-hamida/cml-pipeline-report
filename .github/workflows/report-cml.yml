name: cml-simple
on: [push]

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      
      - uses: iterative/setup-cml@v2
        with: { vega: false }

      # <-- Ajout: crÃ©e les dossiers attendus par train.py / evaluate.py
      - name: Prepare folders
        run: mkdir -p models reports

      - name: Install & run
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python train.py
          python evaluate.py   # doit gÃ©nÃ©rer metrics.json et reports/*.png


      - name: Build report
        shell: bash
        run: |
          set -euo pipefail; set +H
          # Start fresh
          : > report.md
          # Title + section
          printf "## ðŸ“Š Rapport\n\n" >> report.md
          printf "### MÃ©triques\n\n" >> report.md
          # Open code fence
          printf '```json\n' >> report.md
          # Insert metrics (fallback to {} if missing)
          if [ -f metrics.json ]; then
            cat metrics.json >> report.md
          else
            printf '{}\n' >> report.md
          fi
          # Close code fence
          printf '\n```\n\n' >> report.md
          # Images if they exist
          [ -f reports/confusion_matrix.png ] && printf '![inline](reports/confusion_matrix.png)\n' >> report.md
          [ -f reports/feature_importance.png ] && printf '![inline](reports/feature_importance.png)\n' >> report.md
          printf '\n' >> report.md


      - name: Post CML comment
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cml comment create --target="commit/$GITHUB_SHA" report.md


        
